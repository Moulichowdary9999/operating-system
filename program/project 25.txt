#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <unistd.h>
#include <sys/stat.h>
#include <dirent.h>

int main() {
    int file_descriptor;
    ssize_t bytes_read, bytes_written;
    char buffer[1024];

    // Open a file for reading and writing
    file_descriptor = open("example.txt", O_RDWR | O_CREAT | O_TRUNC, S_IRUSR | S_IWUSR);
    if (file_descriptor == -1) {
        perror("open");
        exit(EXIT_FAILURE);
    }

    // Write data to the file
    bytes_written = write(file_descriptor, "Hello, world!\n", 14);
    if (bytes_written == -1) {
        perror("write");
        close(file_descriptor);
        exit(EXIT_FAILURE);
    }

    // Move the file pointer to the beginning of the file
    if (lseek(file_descriptor, 0, SEEK_SET) == -1) {
        perror("lseek");
        close(file_descriptor);
        exit(EXIT_FAILURE);
    }

    // Read data from the file
    bytes_read = read(file_descriptor, buffer, sizeof(buffer));
    if (bytes_read == -1) {
        perror("read");
        close(file_descriptor);
        exit(EXIT_FAILURE);
    }

    // Display the read data
    printf("Read %zd bytes: %s\n", bytes_read, buffer);

    // Close the file
    close(file_descriptor);

    // Get file information using stat
    struct stat file_info;
    if (stat("example.txt", &file_info) == -1) {
        perror("stat");
        exit(EXIT_FAILURE);
    }
    printf("File size: %lld bytes\n", (long long)file_info.st_size);

    // Open a directory and read its contents
    DIR *directory = opendir(".");
    if (directory == NULL) {
        perror("opendir");
        exit(EXIT_FAILURE);
    }
    printf("Directory contents:\n");
    struct dirent *entry;
    while ((entry = readdir(directory)) != NULL) {
        printf("%s\n", entry->d_name);
    }
    closedir(directory);

    return 0;
}


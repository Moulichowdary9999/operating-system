#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <unistd.h>

#define BUFFER_SIZE 1024

int main() {
    int file_descriptor;
    ssize_t bytes_read, bytes_written;
    char buffer[BUFFER_SIZE];

    // Open a file for writing
    file_descriptor = open("example.txt", O_WRONLY | O_CREAT | O_TRUNC, S_IRUSR | S_IWUSR);
    if (file_descriptor == -1) {
        perror("open");
        exit(EXIT_FAILURE);
    }

    // Write data to the file
    bytes_written = write(file_descriptor, "Hello, world!\n", 14);
    if (bytes_written == -1) {
        perror("write");
        close(file_descriptor);
        exit(EXIT_FAILURE);
    }

    // Close the file
    close(file_descriptor);

    // Open the file for reading
    file_descriptor = open("example.txt", O_RDONLY);
    if (file_descriptor == -1) {
        perror("open");
        exit(EXIT_FAILURE);
    }

    // Read data from the file
    bytes_read = read(file_descriptor, buffer, BUFFER_SIZE);
    if (bytes_read == -1) {
        perror("read");
        close(file_descriptor);
        exit(EXIT_FAILURE);
    }

    // Close the file
    close(file_descriptor);

    // Display the read data
    printf("Read %zd bytes: %s\n", bytes_read, buffer);

    return 0;
}

